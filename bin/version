#!/usr/bin/perl -w
# Daybo Logic Podcast downloader
# Copyright (c) 2012-2014, David Duncan Ross Palmer (M6KVM), Daybo Logic
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#     * Neither the name of the Daybo Logic nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

use strict;
use warnings;
use diagnostics;

package main;
use autodie;
use Data::Dumper;
use Getopt::Std;

use constant CONFIGURE => 'configure.ac';
use constant MACRO     => 'AC_INIT';

use constant EXIT_FAILURE => (1);
use constant EXIT_SUCCESS => (0);

sub main();

sub main() {
	my ($conf, %opts, $configure);

	getopts('c:', \%opts) || return EXIT_FAILURE();
	$configure = $opts{'c'} || CONFIGURE();
	open($conf, '<', $configure);
	while ( my $line = <$conf> ) {
		my (@cols, $ver, $macro);

		chomp($line);
		@cols = split(m/\,/o, $line);

		$cols[0] =~ m/^\s*([A-Z0-9_]+)/o if ( $cols[0] );
		$macro = $1;
		next if ( !$macro || $macro ne MACRO() );

		$ver = $cols[1];
		$ver =~ s/\[//;
		$ver =~ s/\]//;
		$ver =~ s/\(//;
		$ver =~ s/\)//;
		printf("%s\n", $ver);
	}
	close($conf);
	return EXIT_SUCCESS();
}

exit(main());
1;
