  * Cached RSS XML files to avoid checking every run (https://bitbucket.org/daybologic/dlpodget.arc)
  * GUI
  * Unit testing (https://bitbucket.org/daybologic/dlpodget.ut)
  * Download rate limiting - on a per-feed basis (https://bitbucket.org/daybologic/dlpodget.rate)
  * Email notifications (https://bitbucket.org/daybologic/dlpodget.email)
  * Transcoding support (https://bitbucket.org/daybologic/dlpodget.codecs)
  * Back-end database tracking, logging and statistics (https://bitbucket.org/daybologic/dlpodget.db)
  * Robust handling of default values for incomplete configs (https://bitbucket.org/daybologic/dlpodget.defaults)
  * Non-RSS feeds (https://bitbucket.org/daybologic/dlpodget.nonrss)
  * User-defined download order (https://bitbucket.org/daybologic/dlpodget.order)
  * Full documentation (https://bitbucket.org/daybologic/dlpodget.pod)
  * Graceful timeout handling (https://bitbucket.org/daybologic/dlpodget.timeouts)
  * OOP re-write (https://bitbucket.org/daybologic/dlpodget.perloop)
  * C++ re-write
  * Archive support - frozen feeds (https://bitbucket.org/daybologic/dlpodget.arc)
  * Quiet mode (-q) for use from crontab

The following modules should be broken out from the monolithic script:
  * LEGACY:

    * Utils
      * fileFromURI
      * processTags (this should invoke and execute the new TagProcessor

    * Muadeeb
      * rSleep

    * Undecided
      * readFeed
      * downloadStream
      * child
      * db
      * dbUpdateFeed
      * dbUpdateStream

    * main
      * banner
      * syntax

  * NEW:

    * TagProcessor
      * assoc
      * output
